/**
    Стили react-select нужно перебивать из-за внутренностей библиотеки,
    потому используются !import
 */

.control {
    --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000),
    var(--tw-shadow);

    --tw-border-opacity: 1;
    border-color: hsl(var(--nextui-default-200) / var(--nextui-default-200-opacity, var(--tw-border-opacity))) !important;

    transition-duration: 150ms !important;
    outline: 2px solid transparent !important;
    outline-offset: 2px;
    padding: 0.5rem 0.5rem 0.5rem 0.75rem;
    border-radius: var(--nextui-radius-medium) !important;
    border-width: var(--nextui-border-width-medium) !important;
    cursor: pointer !important;
}

.control:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nextui-default-400) / var(--nextui-default-400-opacity, var(--tw-border-opacity))) !important;
}

.indicatorSeparator {
    width: var(--nextui-border-width-medium) !important;
    background-color:  hsl(var(--nextui-default-200) / var(--nextui-default-200-opacity, var(--tw-border-opacity))) !important;
}

.input {
    font-weight: 400;
}

.menu {
    --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000),
    var(--tw-shadow);

    --tw-border-opacity: 1;
    border-color: hsl(var(--nextui-default-200) / var(--nextui-default-200-opacity, var(--tw-border-opacity))) !important;

    z-index: var(--z-index-select) !important;
    transition-duration: 150ms !important;
    padding: 0.25rem;
    border-radius: var(--nextui-radius-medium) !important;
    border-width: var(--nextui-border-width-medium) !important;

    margin-bottom: 30px !important;
}

.multiValue {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nextui-default-200) / var(--nextui-default-200-opacity, var(--tw-border-opacity))) !important;

    border-radius: 30px !important;
    border-width: var(--nextui-border-width-medium) !important;

    padding: 0.05rem 0.3rem !important;
    background-color: transparent !important;
    align-items: center;
}

.multiValueLabel {
    font-weight: 400;
}

.multiValueRemove {
    height: 15px;
    width: 15px;
    border-radius: 100% !important;
    padding: 0 !important;
    opacity: 0.7;
    background-color: #000 !important;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.multiValueRemove:hover {
    opacity: 1;
}

.multiValueRemove svg {
    fill: #fff;
    width: 11px;
    height: 11px;
}

.noOptionsMessage {
    font-size: 0.875rem;
    line-height: 1.25rem;
    color: #A1A1AA;
}

.menu {
    border-width: 1px !important;
    border-style: solid;
    border-color: var(--primary-color) !important;
}

.menuList {
    display: flex;
    flex-direction: column;
    gap: 3px;
}

.option {
    padding: 0.375rem 0.5rem 0.375rem 0.5rem !important;
    border-radius: var(--nextui-radius-small);
    background-color: transparent !important;
    font-size: 0.875rem !important;
    line-height: 1.25rem !important;
    cursor: pointer !important;
}

.option:hover {
    background-color: #ebebeb !important;
}

.option_selected {
    background-color: var(--primary-color) !important;
}

.option_selected:hover {
    background-color: var(--disabled-primary-color) !important;
}

.placeholder {
    --tw-text-opacity: 1;
    color: hsl(var(--nextui-foreground-500) / var(--nextui-foreground-500-opacity, var(--tw-text-opacity))) !important;

    font-size: 0.875rem;
    line-height: 1.25rem;
    text-overflow: ellipsis;
    cursor: text;
}

.valueContainer {
    padding-left: 0 !important;
}
